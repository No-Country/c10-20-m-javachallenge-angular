# GENERAL
server.port=8080
#
//spring.datasource.url=${MYSQL_URL}
//spring.datasource.dbname=${MYSQL_DATABASE}
//spring.datasource.username=${MYSQL_USER}
//spring.datasource.password=${MYSQL_PASSWORD}

# DATABASE
spring.datasource.url=jdbc:mysql://localhost:3306/dblibrarybooks?useSSL=false&&allowPublicKeyRetrieval=true
spring.datasource.dbname=dblibrarybooks
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

spring.servlet.multipart.max-file-size=200KB
spring.servlet.multipart.max-request-size=215KB

#Documentation

#enable / disable api-docs
springdoc.api-docs.enabled = true
springdoc.swagger-ui.enabled = true

#define the swagger-ui route
springdoc.swagger-ui.path=/doc/swagger-ui.html

#packets or routes that we want to be displayed or not
springdoc.pathsToMatch=/book/**, /category/**, /qualification/**, /reservation/**,

# mail config
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=bibliotecajoaninano@gmail.com
spring.mail.password=xhleodrqwksaawic
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

#inicio de secion con google
spring.security.oauth2.client.registration.google.client-id=[TU_ID_DE_CLIENTE_DE_GOOGLE]
spring.security.oauth2.client.registration.google.client-secret=[TU_SECRETO_DE_CLIENTE_DE_GOOGLE]
spring.security.oauth2.client.registration.google.scope=openid,email,profile
spring.security.oauth2.client.registration.google.redirect-uri-template={baseUrl}/login/oauth2/code/{registrationId}